
# Generated by stc version 0.7.3
# date                    : 2017/06/13 08:26:52
# Turbine version         : 1.0.0
# Input filename          : /home/blue42u/fib.swift
# Output filename         : /home/blue42u
# STC home                : /home/blue42u/out/stc
# Turbine home            : /home/blue42u/out/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : fib.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : true
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dataflow-op-inline    : true
# stc.opt.dead-code-elim        : true
# stc.opt.demote-globals        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : false
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-function-inline  : false
# stc.opt.full-unroll           : false
# stc.opt.function-always-inline-threshold: 5
# stc.opt.function-inline       : true
# stc.opt.function-inline-threshold: 50
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.propagate-aliases     : true
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : 
# stc.stc_home                  : /home/blue42u/out/stc
# stc.turbine.version           : 1.0.0
# stc.turbine_home              : /home/blue42u/out/turbine
# stc.version                   : 0.7.3

# Metadata:

package require turbine 1.0.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
}


proc swift:main {  } {
    turbine::c::log "function: __entry"
    # Var: int t:5 EXPR_TEMPORARY fib.swift:20:0
    # Var: $string v:t:7 VALUE_OF [string:__t:7]
    # Var: $int v:t:6 VALUE_OF [int:__t:6]
    lassign [ adlb::multicreate [ list integer 0 1 1 ] ] t:5
    turbine::c::log "allocated t:5=<${t:5}>"
    set v:t:7 [ turbine::argv_get_impl "arg" ]
    set v:t:6 [ turbine::parse_int_impl ${v:t:7} 10 ]
    set tcltmp:prio [ turbine::get_priority ]
    turbine::set_priority ${tcltmp:prio}
    adlb::spawn 0 "f:fib-1 ${t:5} ${v:t:6}"
    turbine::reset_priority
}


proc f:fib-1 { u:o v:i:1 } {
    turbine::c::log "function: fib-1"
    # Var: $boolean v:t:1 VALUE_OF [boolean:__t:1]
    set v:t:1 [ expr { ${v:i:1} >= 2 } ]
    if { ${v:t:1} } {
        # Var: int t:3 EXPR_TEMPORARY fib.swift:fib():7:8
        # Var: int t:6 EXPR_TEMPORARY fib.swift:fib():7:19
        # Var: $int v:t:4 VALUE_OF [int:__t:4]
        # Var: $int v:t:7 VALUE_OF [int:__t:7]
        lassign [ adlb::multicreate [ list integer 1 1 2 ] [ list integer 1 1 3 ] ] t:3 t:6
        turbine::c::log "allocated t:3=<${t:3}> t:6=<${t:6}>"
        set v:t:4 [ expr { ${v:i:1} - 1 } ]
        set v:t:7 [ expr { ${v:i:1} - 2 } ]
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:fib-1 ${t:3} ${v:t:4}"
        turbine::reset_priority
        set tcltmp:prio [ turbine::get_priority ]
        turbine::set_priority ${tcltmp:prio}
        adlb::spawn 0 "f:fib-1 ${t:6} ${v:t:7}"
        turbine::reset_priority
        turbine::rule [ list ${t:3} ${t:6} ] "fib-async_op-plus_int ${t:3} ${t:6} {${u:o}}"
    } else {
        # Var: $boolean v:t:9 VALUE_OF [boolean:__t:9]
        set v:t:9 [ expr { ${v:i:1} == 1 } ]
        if { ${v:t:9} } {
            turbine::store_integer ${u:o} 1
        } else {
            turbine::store_integer ${u:o} 0
        }
    }
}


proc fib-async_op-plus_int { t:3 t:6 u:o } {
    # Var: $int v:t:3 VALUE_OF [int:__t:3]
    # Var: $int v:t:6 VALUE_OF [int:__t:6]
    # Var: $int v:o VALUE_OF [int:o]
    set v:t:3 [ turbine::retrieve_integer ${t:3} CACHED 1 ]
    set v:t:6 [ turbine::retrieve_integer ${t:6} CACHED 1 ]
    set v:o [ expr { ${v:t:3} + ${v:t:6} } ]
    turbine::store_integer ${u:o} ${v:o}
}

turbine::defaults
turbine::declare_custom_work_types COASTER
turbine::init $servers "Swift"
turbine::enable_read_refcount
adlb::declare_struct_type 16 s:location [ list "rank" integer "strictness" string "accuracy" string ]
turbine::check_constants "WORKER\[WORKER\]" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::WORK_TASK} 0 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
adlb::add_debug_symbol 1 "__t:5" "fib:20:0"
adlb::add_debug_symbol 2 "__t:3" "fib:fib():7:8"
adlb::add_debug_symbol 3 "__t:6" "fib:fib():7:19"
turbine::start swift:main swift:constants
turbine::finalize
